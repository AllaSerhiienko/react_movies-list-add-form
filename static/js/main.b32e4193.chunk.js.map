{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","urlValidation","id","Math","random","toFixed","slice","useState","touched","setTouched","hasError","trim","hasUrlError","htmlFor","type","classNames","event","onBlur","startMovieState","PATTERN","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","isUrlValid","url","test","areBlankFields","handleChange","target","prevMovie","onSubmit","preventDefault","prevCount","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b32e4193.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  urlValidation?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  urlValidation,\n}) => {\n  const id = `${name}-${getRandomDigits()}`;\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value.trim();\n  const hasUrlError = touched && urlValidation && !urlValidation(value.trim());\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          name={name}\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasUrlError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {!hasError && hasUrlError && (\n        <p className=\"help is-danger\">Invalid URL</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nconst startMovieState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\n// eslint-disable-next-line max-len\nconst PATTERN = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({ onAdd = () => { } }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState(startMovieState);\n\n  const isUrlValid = (url: string) => PATTERN.test(url);\n\n  const areBlankFields = !newMovie.title.trim()\n    || !isUrlValid(newMovie.imgUrl)\n    || !isUrlValid(newMovie.imdbUrl)\n    || !newMovie.imdbId.trim();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n\n    setNewMovie(prevMovie => ({\n      ...prevMovie,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (areBlankFields) {\n      return;\n    }\n\n    onAdd(newMovie);\n\n    setCount(prevCount => prevCount + 1);\n    setNewMovie(startMovieState);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={handleChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={handleChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={handleChange}\n        required\n        urlValidation={isUrlValid}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={handleChange}\n        required\n        urlValidation={isUrlValid}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={handleChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={areBlankFields}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}